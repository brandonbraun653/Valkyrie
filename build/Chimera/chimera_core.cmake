# Generated by CMake

if("${CMAKE_MAJOR_VERSION}.${CMAKE_MINOR_VERSION}" LESS 2.5)
   message(FATAL_ERROR "CMake >= 2.6.0 required")
endif()
cmake_policy(PUSH)
cmake_policy(VERSION 2.6...3.18)
#----------------------------------------------------------------
# Generated CMake target import file.
#----------------------------------------------------------------

# Commands may need to know the format version.
set(CMAKE_IMPORT_FILE_VERSION 1)

if(CMAKE_VERSION VERSION_LESS 3.0.0)
  message(FATAL_ERROR "This file relies on consumers using CMake 3.0.0 or greater.")
endif()

# Protect against multiple inclusion, which would fail when already imported targets are added once more.
set(_targetsDefined)
set(_targetsNotDefined)
set(_expectedTargets)
foreach(_expectedTarget chimera_core)
  list(APPEND _expectedTargets ${_expectedTarget})
  if(NOT TARGET ${_expectedTarget})
    list(APPEND _targetsNotDefined ${_expectedTarget})
  endif()
  if(TARGET ${_expectedTarget})
    list(APPEND _targetsDefined ${_expectedTarget})
  endif()
endforeach()
if("${_targetsDefined}" STREQUAL "${_expectedTargets}")
  unset(_targetsDefined)
  unset(_targetsNotDefined)
  unset(_expectedTargets)
  set(CMAKE_IMPORT_FILE_VERSION)
  cmake_policy(POP)
  return()
endif()
if(NOT "${_targetsDefined}" STREQUAL "")
  message(FATAL_ERROR "Some (but not all) targets in this export set were already defined.\nTargets Defined: ${_targetsDefined}\nTargets not yet defined: ${_targetsNotDefined}\n")
endif()
unset(_targetsDefined)
unset(_targetsNotDefined)
unset(_expectedTargets)


# Create imported target chimera_core
add_library(chimera_core INTERFACE IMPORTED)

set_target_properties(chimera_core PROPERTIES
  INTERFACE_LINK_LIBRARIES "chimera_algorithm;chimera_allocator;chimera_assert;chimera_buffer;chimera_common;chimera_event;chimera_pwm;chimera_scheduler_low_res;chimera_serial;chimera_system;chimera_threading;chimera_usb;chimera_utilities;chimera_peripheral_adc;chimera_peripheral_can;chimera_peripheral_clock;chimera_peripheral_crc;chimera_peripheral_dma;chimera_peripheral_exti;chimera_peripheral_gpio;chimera_peripheral_interrupt;chimera_peripheral_power;chimera_peripheral_spi;chimera_peripheral_timer;chimera_peripheral_uart;chimera_peripheral_usart;chimera_peripheral_usb;chimera_peripheral_watchdog"
)

# Make sure the targets which have been exported in some other
# export set exist.
unset(${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE_targets)
foreach(_target "chimera_algorithm" "chimera_allocator" "chimera_assert" "chimera_buffer" "chimera_common" "chimera_event" "chimera_pwm" "chimera_scheduler_low_res" "chimera_serial" "chimera_system" "chimera_threading" "chimera_usb" "chimera_utilities" "chimera_peripheral_adc" "chimera_peripheral_can" "chimera_peripheral_clock" "chimera_peripheral_crc" "chimera_peripheral_dma" "chimera_peripheral_exti" "chimera_peripheral_gpio" "chimera_peripheral_interrupt" "chimera_peripheral_power" "chimera_peripheral_spi" "chimera_peripheral_timer" "chimera_peripheral_uart" "chimera_peripheral_usart" "chimera_peripheral_usb" "chimera_peripheral_watchdog" )
  if(NOT TARGET "${_target}" )
    set(${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE_targets "${${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE_targets} ${_target}")
  endif()
endforeach()

if(DEFINED ${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE_targets)
  if(CMAKE_FIND_PACKAGE_NAME)
    set( ${CMAKE_FIND_PACKAGE_NAME}_FOUND FALSE)
    set( ${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE "The following imported targets are referenced, but are missing: ${${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE_targets}")
  else()
    message(FATAL_ERROR "The following imported targets are referenced, but are missing: ${${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE_targets}")
  endif()
endif()
unset(${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE_targets)

# Commands beyond this point should not need to know the version.
set(CMAKE_IMPORT_FILE_VERSION)
cmake_policy(POP)
